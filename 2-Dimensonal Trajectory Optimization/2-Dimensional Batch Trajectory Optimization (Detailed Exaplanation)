2-Dimensional Batch Trajectory Optimization

The goal is to optimize the trajectory using the batch method. This suggests that we construct the entire factor graph, and optimize it all at once. 
Thus, all the constraints (links between vertices, landmarks (however for this problem we don't have any landmarks), etc), would be optimized all at once. We begin the batch optimization program by reading the sensor data from the “input_INTEL_g2o.g2o” file using the predefined (or prebuilt) readG2o function from gtsam and loading the same in the variable graph. Thus in one line, using the readG2o function, we can construct the entire graph (using all the data in the .g2o file) comprising all the poses (vertices) and the links (edges).
The next step is to define the priorModel, comprising the “sigmas” in a diagonal form. These values allow the “stochastic” nature of the graph poses. By including a variance (from the defined sigmas), the poses (vertices) are no longer deterministic. Thus we have successfully developed the noise for the prior factor. We then add this noise to the graph. The next step is the optimization of the developed graph.
For simplicity, the optimization parameters are chosen to be as of Gauss_Newton parameters (from the gtsam library), and then set the optimizer as the GaussNewtonOptimizer. Then we execute the GaussNewton optimizer, optimizing over the “graph” we have made (using all the vertices and edges (constraints) from the .g2o data) and the mentioned parameters (saved as variable params)
We then optimize this developed optimizer and store the optimized result in the variable, result.
This result is then converted into a NumPy array (after processing through .atPose2() using the generate_xy_updated() function) and then stored in the variable updated_x_y. This allows us to plot the optimized trajectory of the robot. On the same graph, we can also plot the initial_x_y trajectory, computed by the sensor reading.
For a detailed understanding of the code and algorithm, please follow the linewise comments in the python code attached herewith.




